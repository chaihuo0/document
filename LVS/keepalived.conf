bal_defs {
    router_id LVS_1  # 设置lvs的id，在一个网络内应该是唯一的
}


vrrp_instance VI_1 {
    state MASTER   #指定Keepalived的角色，MASTER为主，BACKUP为备
	interface em2  #虚拟ip所在网
	lvs_sync_daemon_interface em2   #--指定它为一个心跳网卡
	virtual_router_id 51  #虚拟路由编号，主备要一致
    priority 100  #定义优先级，数字越大，优先级越高，主DR必须大于备用DR
    advert_int 1  #检查间隔，默认为1s
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        14.18.189.136  #定义虚拟IP(VIP)为172.18.42.225，可多设，每行一个
		172.17.14.143
        172.17.14.140
    }
}
vrrp_instance VI_2 {	#--实例2
    state MASTER
    interface em1			#--第二个服务网卡，也是我的内网
    lvs_sync_daemon_interface em1	#--第二个心跳网卡
    virtual_router_id 52		#--换一个router_id
    priority 100
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {	
        183.62.121.100		#--这样写就实现了1.1.1.1这个VIP在eth0，2.2.2.2这个VIP在eth1
        183.62.121.140
    }
}


######################## F10项目WEB ###################################
virtual_server 183.62.121.140 80 {
    delay_loop 6 # 设置健康检查时间，单位是秒
    lb_algo wlc # 设置负载调度的算法为wlc 基于权重的调度算法
    lb_kind DR # 设置LVS实现负载的机制，有NAT、TUN、DR三个模式
    nat_mask 255.255.255.0
    persistence_timeout 60 #会话保持时间   （为了实验效果可以注释掉该选项）
    protocol TCP
    real_server 172.17.14.147 80 {  # 指定real server1的IP地址
        weight 3   # 配置节点权值，数字越大权重越高
        TCP_CHECK {
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
        connect_port 80
        }
	}

    real_server 172.17.14.149 80 {  # 指定real server2的IP地址
        weight 3  # 配置节点权值，数字越大权重越高
        TCP_CHECK {
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
        connect_port 80
        }
    }
}

####################### Cockroach数据库 ####################################
# 定义对外提供服务的LVS的VIP以及port
virtual_server 14.18.189.136 26258 {
    delay_loop 6 # 设置健康检查时间，单位是秒
    lb_algo wlc # 设置负载调度的算法为wlc 基于权重的调度算法
    lb_kind DR # 设置LVS实现负载的机制，有NAT、TUN、DR三个模式
    nat_mask 255.255.255.0
    persistence_timeout 600 #会话保持时间   （为了实验效果可以注释掉该选项）
    protocol TCP
    real_server 172.17.14.147 26258 {  # 指定real server1的IP地址
        weight 3   # 配置节点权值，数字越大权重越高
        TCP_CHECK {
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
        connect_port 26258
        }
	}

    real_server 172.17.14.150 26258 {  # 指定real server2的IP地址
        weight 3  # 配置节点权值，数字越大权重越高
        TCP_CHECK {
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
        connect_port 26258
        }
    }

#    real_server 172.17.14.147 26257 {  # 指定real server2的IP地址
#        weight 3  # 配置节点权值，数字越大权重越高
#        TCP_CHECK {
#        connect_timeout 10
#        nb_get_retry 3
#        delay_before_retry 3
#        connect_port 26257
#        }
#     } 

#    real_server 172.17.14.148 26257 {  # 指定real server2的IP地址
#        weight 3  # 配置节点权值，数字越大权重越高
#        TCP_CHECK {
#        connect_timeout 10
#        nb_get_retry 3
#        delay_before_retry 3
#        connect_port 26257
#        }
#     }

#    real_server 172.17.14.150 26257 {  # 指定real server2的IP地址
#        weight 3  # 配置节点权值，数字越大权重越高
#        TCP_CHECK {
#        connect_timeout 10
#        nb_get_retry 3
#        delay_before_retry 3
#        connect_port 26257
#        }
#     }

}

######################## mysql DB #########################################
virtual_server 172.17.14.143 8999 {
    delay_loop 6 # 设置健康检查时间，单位是秒
    lb_algo wlc # 设置负载调度的算法为wlc 基于权重的调度算法
    lb_kind DR # 设置LVS实现负载的机制，有NAT、TUN、DR三个模式
    nat_mask 255.255.255.0
#   persistence_timeout 50 #会话保持时间   （为了实验效果可以注释掉该选项）
    protocol TCP

    real_server 172.17.14.145 8999 {  # 指定real server1的IP地址
        weight 3   # 配置节点权值，数字越大权重越高
        TCP_CHECK {
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
        connect_port 8999
        }
	}
}