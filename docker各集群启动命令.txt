
网关(120)
docker run --name cloud-service-gateway1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-gateway/config/bootstrap.yml:/root/springcloud/cloud-service-gateway/config/bootstrap.yml -v /root/springcloud/cloud-service-gateway/cloud-service-gateway-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-gateway/app.jar cloud-service-gateway/1
网关(128)
docker run --name cloud-service-gateway2 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-gateway/config/bootstrap.yml:/root/springcloud/cloud-service-gateway/config/bootstrap.yml -v /root/springcloud/cloud-service-gateway/cloud-service-gateway-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-gateway/app.jar cloud-service-gateway/2

oauth(120)
docker run --name cloud-service-oauth1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-oauth/config:/root/springcloud/cloud-service-oauth/config -v /root/springcloud/cloud-service-oauth/cloud-service-oauth-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-oauth/app.jar cloud-service-oauth/1
oauth(128)
docker run --name cloud-service-oauth2 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-oauth/config:/root/springcloud/cloud-service-oauth/config -v /root/springcloud/cloud-service-oauth/cloud-service-oauth-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-oauth/app.jar cloud-service-oauth/2

user(120)
docker run --name cloud-service-user1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-user/config:/root/springcloud/cloud-service-user/config -v /root/springcloud/cloud-service-user/cloud-service-user-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-user/app.jar cloud-service-user/1
user(128)
docker run --name cloud-service-user2 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/cloud-service-user/config:/root/springcloud/cloud-service-user/config -v /root/springcloud/cloud-service-user/cloud-service-user-1.0-SNAPSHOT.jar:/root/springcloud/cloud-service-user/app.jar cloud-service-user/2


配置中心(120)
docker run --name config-server1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/config-server/cloud-config-server-1.0-SNAPSHOT.jar:/root/springcloud/config-server/app.jar -v /root/springcloud/config-server/config/application.yml:/root/springcloud/config-server/config/application.yml -v /root/springcloud/config-server/config/logback-spring.xml:/root/springcloud/config-server/config/logback-spring.xml config-server/1
配置中心(128)
docker run --name config-server2 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/config-server/cloud-config-server-1.0-SNAPSHOT.jar:/root/springcloud/config-server/app.jar -v /root/springcloud/config-server/config/application.yml:/root/springcloud/config-server/config/application.yml -v /root/springcloud/config-server/config/logback-spring.xml:/root/springcloud/config-server/config/logback-spring.xml config-server/2

注册中心(120)
docker run --name eureka1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/eureka/config/application.yml:/root/springcloud/eureka/config/application.yml eureka/1
注册中心(128)
docker run --name eureka1 --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/eureka/config/application.yml:/root/springcloud/eureka/config/application.yml eureka/1

zipkin服务追踪监控(不用部署)
docker run --name zipkin --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/zipkin/config/application.yml:/root/springcloud/zipkin/config/application.yml -v /root/springcloud/zipkin/cloud-zipkin-server-1.0-SNAPSHOT.jar:/root/springcloud/zipkin/app.jar zipkin



服务断路器监控(不用部署)
docker run --name hystrix-dashboard --rm --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/hystrix-dashboard/config/application.yml:/root/springcloud/hystrix-dashboard/config/application.yml hystrix-dashboard

服务断路器监控(不用部署)
docker run --name turbine --rm --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/turbine/config/application.yml:/root/springcloud/turbine/config/application.yml turbine

zookeeper节点1(120)
docker run -d --name zk1 --net=host -v /root/springcloud/zookeeper/myid:/data/myid -v /root/springcloud/zookeeper/zoo.cfg:/conf/zoo.cfg -e SERVER_ID=1 -e ADDITIONAL_ZOOKEEPER_1=server.1=172.18.44.120:2883:3883  -e ADDITIONAL_ZOOKEEPER_2=server.2=172.18.44.128:2884:3884  -e ADDITIONAL_ZOOKEEPER_3=server.3=172.18.44.123:2885:3885 zookeeper

zookeeper节点2(128)
docker run -d --name zk2 --net=host -v /root/springcloud/zookeeper/myid1:/data/myid  -v /root/springcloud/zookeeper/zoo1.cfg:/conf/zoo.cfg -e SERVER_ID=2 -e ADDITIONAL_ZOOKEEPER_1=server.1=172.18.44.120:2883:3883  -e ADDITIONAL_ZOOKEEPER_2=server.2=172.18.44.128:2884:3884  -e ADDITIONAL_ZOOKEEPER_3=server.3=172.18.44.123:2885:3885 zookeeper

zookeeper节点3(123)
docker run -d --name zk3 --net=host -v /root/springcloud/zookeeper/myid2:/data/myid -v /root/springcloud/zookeeper/zoo2.cfg:/conf/zoo.cfg -e SERVER_ID=3 -e ADDITIONAL_ZOOKEEPER_1=server.1=172.18.44.120:2883:3883  -e ADDITIONAL_ZOOKEEPER_2=server.2=172.18.44.128:2884:3884  -e ADDITIONAL_ZOOKEEPER_3=server.3=172.18.44.123:2885:3885 zookeeper

kafka消息中间件(120)
docker run --name kafka1 --net=host -d -e TZ="Asia/Shanghai" -v /root/springcloud/kafka/kafka_2.12-1.0.0:/root/springcloud/kafka/kafka_2.12-1.0.0 kafka/1 /root/springcloud/kafka/kafka_2.12-1.0.0/bin/kafka-server-start.sh /root/springcloud/kafka/kafka_2.12-1.0.0/config/server.properties

kafka消息中间件(128)
docker run --name kafka2 --net=host -d -e TZ="Asia/Shanghai" -v /root/springcloud/kafka/kafka_2.12-1.0.0:/root/springcloud/kafka/kafka_2.12-1.0.0 kafka/2 /root/springcloud/kafka/kafka_2.12-1.0.0/bin/kafka-server-start.sh /root/springcloud/kafka/kafka_2.12-1.0.0/config/server.properties

kafka消息中间件(123)
docker run --name kafka --net=host -d -e TZ="Asia/Shanghai" -v /fintech/springcloud/kafka/kafka_2.12-1.0.0:/fintech/springcloud/kafka/kafka_2.12-1.0.0 kafka:20181128 /fintech/springcloud/kafka/kafka_2.12-1.0.0/bin/kafka-server-start.sh /fintech/springcloud/kafka/kafka_2.12-1.0.0/config/server.properties

kafka管理工具(128)
docker run --name kafka-manager --net=host -e TZ="Asia/Shanghai" -d -v /root/springcloud/kafka-manager/kafka-manager-1.3.3.15:/root/springcloud/kafka-manager/kafka-manager-1.3.3.15 kafka/manager

redis节点1(120)
docker run --name redis1 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-1:/data -v /root/springcloud/redis/redis-1/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

redis节点5(120)
docker run --name redis5 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-5:/data -v /root/springcloud/redis/redis-5/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

redis节点3(128)
docker run --name redis3 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-3:/data -v /root/springcloud/redis/redis-3/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

redis节点4(128)
docker run --name redis4 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-4:/data -v /root/springcloud/redis/redis-4/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

redis节点2(123)
docker run --name redis2 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-2:/data -v /root/springcloud/redis/redis-2/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

redis节点6(123)
docker run --name redis6 --net=host  -e TZ="Asia/Shanghai" -v /root/springcloud/redis/redis-6:/data -v /root/springcloud/redis/redis-6/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf

pinpoint-collector
docker run --name pp-col --add-host node1.hx:172.18.44.123 --add-host node2.hx:172.18.44.128 --add-host node3.hx:172.18.44.120 --add-host huaxun01:172.18.44.2 --add-host huaxun02:172.18.44.3 --add-host huaxun03:172.18.44.4 --add-host huaxun04:172.18.44.66 --net=host -e TZ="Asia/Shanghai" -v /root/springcloud/pp-col/docker/conf/server.xml:/usr/local/tomcat/conf/server.xml -d -v /root/springcloud/pp-col/docker/webapps/ROOT:/usr/local/tomcat/webapps/ROOT tomcat

pinpoint-web
docker run --name pp-web --add-host node1.hx:172.18.44.123 -d --add-host node2.hx:172.18.44.128 --add-host node3.hx:172.18.44.120 --add-host huaxun01:172.18.44.2 --add-host huaxun02:172.18.44.3 --add-host huaxun03:172.18.44.4 --add-host huaxun04:172.18.44.66 --net=host -e TZ="Asia/Shanghai" -v /root/springcloud/pp-web/apache-tomcat-8.0.36/conf/server.xml:/usr/local/tomcat/conf/server.xml  -v /root/springcloud/pp-web/apache-tomcat-8.0.36/webapps/root:/usr/local/tomcat/webapps/ROOT tomcat


172.18.44.120 cockroachdb 节点1(120)
docker run --name roach --net=host -e TZ="Asia/Shanghai" -v /root/springcloud/CRDB/n1/node1:/cockroach/cockroach-data -d  cockroachdb/cockroach:v2.0.0  start --insecure --host=172.18.44.120 --port=26257 --http-port=8080 --cache=5% --max-sql-memory=10%

172.18.44.128 cockroachdb 节点3(128)
docker run --name roach --net=host -e TZ="Asia/Shanghai" -v /root/springcloud/CRDB/n3/node3:/cockroach/cockroach-data -d  cockroachdb/cockroach:v2.0.0  start --insecure --host=172.18.44.128 --port=26257 --http-port=8080 --cache=5% --max-sql-memory=10%

172.18.44.123 cockroachdb 节点5(123)
docker run --name roach --net=host -e TZ="Asia/Shanghai" -v /root/springcloud/CRDB/n5/node5:/cockroach/cockroach-data -d  cockroachdb/cockroach:v2.0.0  start --insecure --host=172.18.44.123 --port=26257 --http-port=8080 --cache=5% --max-sql-memory=20%
